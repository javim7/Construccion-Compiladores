# Generated from YAPL.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,401,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,
        5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
        12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,4,17,134,8,
        17,11,17,12,17,135,1,17,1,17,1,18,1,18,1,18,1,18,5,18,144,8,18,10,
        18,12,18,147,9,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,5,
        19,158,8,19,10,19,12,19,161,9,19,1,19,1,19,1,19,1,19,1,19,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,178,8,20,1,21,1,
        21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,188,8,21,1,22,1,22,1,22,1,
        22,3,22,194,8,22,1,23,1,23,1,23,1,23,3,23,200,8,23,1,24,1,24,1,24,
        1,24,3,24,206,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,224,8,25,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,238,8,26,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,3,27,248,8,27,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,3,28,258,8,28,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,29,3,29,268,8,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,3,30,280,8,30,1,31,1,31,1,31,1,31,1,31,1,31,3,31,
        288,8,31,1,32,1,32,1,32,1,32,1,32,1,32,3,32,296,8,32,1,33,1,33,1,
        33,1,33,1,33,1,33,1,33,1,33,3,33,306,8,33,1,34,1,34,1,34,1,34,1,
        34,1,34,1,34,1,34,1,34,1,34,3,34,318,8,34,1,35,1,35,1,35,1,35,1,
        35,1,35,3,35,326,8,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,3,
        36,336,8,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,3,37,346,8,37,
        1,38,1,38,1,38,1,38,3,38,352,8,38,1,39,1,39,1,39,5,39,357,8,39,10,
        39,12,39,360,9,39,1,39,1,39,1,40,4,40,365,8,40,11,40,12,40,366,1,
        41,1,41,5,41,371,8,41,10,41,12,41,374,9,41,1,42,1,42,5,42,378,8,
        42,10,42,12,42,381,9,42,1,43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,
        1,45,3,45,392,8,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,2,145,
        159,0,48,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
        45,91,0,93,0,95,0,1,0,8,3,0,9,10,12,13,32,32,2,0,34,34,92,92,1,0,
        48,57,1,0,65,90,4,0,48,57,65,90,95,95,97,122,1,0,97,122,8,0,34,34,
        47,47,92,92,98,98,102,102,110,110,114,114,116,116,3,0,48,57,65,70,
        97,102,426,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
        0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
        0,0,0,1,97,1,0,0,0,3,99,1,0,0,0,5,101,1,0,0,0,7,103,1,0,0,0,9,105,
        1,0,0,0,11,107,1,0,0,0,13,109,1,0,0,0,15,111,1,0,0,0,17,113,1,0,
        0,0,19,115,1,0,0,0,21,117,1,0,0,0,23,119,1,0,0,0,25,121,1,0,0,0,
        27,123,1,0,0,0,29,125,1,0,0,0,31,128,1,0,0,0,33,130,1,0,0,0,35,133,
        1,0,0,0,37,139,1,0,0,0,39,152,1,0,0,0,41,177,1,0,0,0,43,187,1,0,
        0,0,45,193,1,0,0,0,47,199,1,0,0,0,49,205,1,0,0,0,51,223,1,0,0,0,
        53,237,1,0,0,0,55,247,1,0,0,0,57,257,1,0,0,0,59,267,1,0,0,0,61,279,
        1,0,0,0,63,287,1,0,0,0,65,295,1,0,0,0,67,305,1,0,0,0,69,317,1,0,
        0,0,71,325,1,0,0,0,73,335,1,0,0,0,75,345,1,0,0,0,77,351,1,0,0,0,
        79,353,1,0,0,0,81,364,1,0,0,0,83,368,1,0,0,0,85,375,1,0,0,0,87,382,
        1,0,0,0,89,385,1,0,0,0,91,388,1,0,0,0,93,393,1,0,0,0,95,399,1,0,
        0,0,97,98,5,59,0,0,98,2,1,0,0,0,99,100,5,123,0,0,100,4,1,0,0,0,101,
        102,5,125,0,0,102,6,1,0,0,0,103,104,5,40,0,0,104,8,1,0,0,0,105,106,
        5,44,0,0,106,10,1,0,0,0,107,108,5,41,0,0,108,12,1,0,0,0,109,110,
        5,58,0,0,110,14,1,0,0,0,111,112,5,64,0,0,112,16,1,0,0,0,113,114,
        5,46,0,0,114,18,1,0,0,0,115,116,5,126,0,0,116,20,1,0,0,0,117,118,
        5,42,0,0,118,22,1,0,0,0,119,120,5,47,0,0,120,24,1,0,0,0,121,122,
        5,43,0,0,122,26,1,0,0,0,123,124,5,45,0,0,124,28,1,0,0,0,125,126,
        5,60,0,0,126,127,5,61,0,0,127,30,1,0,0,0,128,129,5,60,0,0,129,32,
        1,0,0,0,130,131,5,61,0,0,131,34,1,0,0,0,132,134,7,0,0,0,133,132,
        1,0,0,0,134,135,1,0,0,0,135,133,1,0,0,0,135,136,1,0,0,0,136,137,
        1,0,0,0,137,138,6,17,0,0,138,36,1,0,0,0,139,140,5,45,0,0,140,141,
        5,45,0,0,141,145,1,0,0,0,142,144,9,0,0,0,143,142,1,0,0,0,144,147,
        1,0,0,0,145,146,1,0,0,0,145,143,1,0,0,0,146,148,1,0,0,0,147,145,
        1,0,0,0,148,149,5,10,0,0,149,150,1,0,0,0,150,151,6,18,1,0,151,38,
        1,0,0,0,152,153,5,40,0,0,153,154,5,42,0,0,154,159,1,0,0,0,155,158,
        3,39,19,0,156,158,9,0,0,0,157,155,1,0,0,0,157,156,1,0,0,0,158,161,
        1,0,0,0,159,160,1,0,0,0,159,157,1,0,0,0,160,162,1,0,0,0,161,159,
        1,0,0,0,162,163,5,42,0,0,163,164,5,41,0,0,164,165,1,0,0,0,165,166,
        6,19,1,0,166,40,1,0,0,0,167,168,5,67,0,0,168,169,5,76,0,0,169,170,
        5,65,0,0,170,171,5,83,0,0,171,178,5,83,0,0,172,173,5,99,0,0,173,
        174,5,108,0,0,174,175,5,97,0,0,175,176,5,115,0,0,176,178,5,115,0,
        0,177,167,1,0,0,0,177,172,1,0,0,0,178,42,1,0,0,0,179,180,5,69,0,
        0,180,181,5,76,0,0,181,182,5,83,0,0,182,188,5,69,0,0,183,184,5,101,
        0,0,184,185,5,108,0,0,185,186,5,115,0,0,186,188,5,101,0,0,187,179,
        1,0,0,0,187,183,1,0,0,0,188,44,1,0,0,0,189,190,5,70,0,0,190,194,
        5,73,0,0,191,192,5,102,0,0,192,194,5,105,0,0,193,189,1,0,0,0,193,
        191,1,0,0,0,194,46,1,0,0,0,195,196,5,73,0,0,196,200,5,70,0,0,197,
        198,5,105,0,0,198,200,5,102,0,0,199,195,1,0,0,0,199,197,1,0,0,0,
        200,48,1,0,0,0,201,202,5,73,0,0,202,206,5,78,0,0,203,204,5,105,0,
        0,204,206,5,110,0,0,205,201,1,0,0,0,205,203,1,0,0,0,206,50,1,0,0,
        0,207,208,5,73,0,0,208,209,5,78,0,0,209,210,5,72,0,0,210,211,5,69,
        0,0,211,212,5,82,0,0,212,213,5,73,0,0,213,214,5,84,0,0,214,224,5,
        83,0,0,215,216,5,105,0,0,216,217,5,110,0,0,217,218,5,104,0,0,218,
        219,5,101,0,0,219,220,5,114,0,0,220,221,5,105,0,0,221,222,5,116,
        0,0,222,224,5,115,0,0,223,207,1,0,0,0,223,215,1,0,0,0,224,52,1,0,
        0,0,225,226,5,73,0,0,226,227,5,83,0,0,227,228,5,86,0,0,228,229,5,
        79,0,0,229,230,5,73,0,0,230,238,5,68,0,0,231,232,5,105,0,0,232,233,
        5,115,0,0,233,234,5,118,0,0,234,235,5,111,0,0,235,236,5,105,0,0,
        236,238,5,100,0,0,237,225,1,0,0,0,237,231,1,0,0,0,238,54,1,0,0,0,
        239,240,5,76,0,0,240,241,5,79,0,0,241,242,5,79,0,0,242,248,5,80,
        0,0,243,244,5,108,0,0,244,245,5,111,0,0,245,246,5,111,0,0,246,248,
        5,112,0,0,247,239,1,0,0,0,247,243,1,0,0,0,248,56,1,0,0,0,249,250,
        5,80,0,0,250,251,5,79,0,0,251,252,5,79,0,0,252,258,5,76,0,0,253,
        254,5,112,0,0,254,255,5,111,0,0,255,256,5,111,0,0,256,258,5,108,
        0,0,257,249,1,0,0,0,257,253,1,0,0,0,258,58,1,0,0,0,259,260,5,84,
        0,0,260,261,5,72,0,0,261,262,5,69,0,0,262,268,5,78,0,0,263,264,5,
        116,0,0,264,265,5,104,0,0,265,266,5,101,0,0,266,268,5,110,0,0,267,
        259,1,0,0,0,267,263,1,0,0,0,268,60,1,0,0,0,269,270,5,87,0,0,270,
        271,5,72,0,0,271,272,5,73,0,0,272,273,5,76,0,0,273,280,5,69,0,0,
        274,275,5,119,0,0,275,276,5,104,0,0,276,277,5,105,0,0,277,278,5,
        108,0,0,278,280,5,101,0,0,279,269,1,0,0,0,279,274,1,0,0,0,280,62,
        1,0,0,0,281,282,5,78,0,0,282,283,5,69,0,0,283,288,5,87,0,0,284,285,
        5,110,0,0,285,286,5,101,0,0,286,288,5,119,0,0,287,281,1,0,0,0,287,
        284,1,0,0,0,288,64,1,0,0,0,289,290,5,78,0,0,290,291,5,79,0,0,291,
        296,5,84,0,0,292,293,5,110,0,0,293,294,5,111,0,0,294,296,5,116,0,
        0,295,289,1,0,0,0,295,292,1,0,0,0,296,66,1,0,0,0,297,298,5,84,0,
        0,298,299,5,82,0,0,299,300,5,85,0,0,300,306,5,69,0,0,301,302,5,116,
        0,0,302,303,5,114,0,0,303,304,5,117,0,0,304,306,5,101,0,0,305,297,
        1,0,0,0,305,301,1,0,0,0,306,68,1,0,0,0,307,308,5,70,0,0,308,309,
        5,65,0,0,309,310,5,76,0,0,310,311,5,83,0,0,311,318,5,69,0,0,312,
        313,5,102,0,0,313,314,5,97,0,0,314,315,5,108,0,0,315,316,5,115,0,
        0,316,318,5,101,0,0,317,307,1,0,0,0,317,312,1,0,0,0,318,70,1,0,0,
        0,319,320,5,76,0,0,320,321,5,69,0,0,321,326,5,84,0,0,322,323,5,108,
        0,0,323,324,5,101,0,0,324,326,5,116,0,0,325,319,1,0,0,0,325,322,
        1,0,0,0,326,72,1,0,0,0,327,328,5,67,0,0,328,329,5,65,0,0,329,330,
        5,83,0,0,330,336,5,69,0,0,331,332,5,99,0,0,332,333,5,97,0,0,333,
        334,5,115,0,0,334,336,5,101,0,0,335,327,1,0,0,0,335,331,1,0,0,0,
        336,74,1,0,0,0,337,338,5,69,0,0,338,339,5,83,0,0,339,340,5,65,0,
        0,340,346,5,67,0,0,341,342,5,101,0,0,342,343,5,115,0,0,343,344,5,
        97,0,0,344,346,5,99,0,0,345,337,1,0,0,0,345,341,1,0,0,0,346,76,1,
        0,0,0,347,348,5,79,0,0,348,352,5,70,0,0,349,350,5,111,0,0,350,352,
        5,102,0,0,351,347,1,0,0,0,351,349,1,0,0,0,352,78,1,0,0,0,353,358,
        5,34,0,0,354,357,3,91,45,0,355,357,8,1,0,0,356,354,1,0,0,0,356,355,
        1,0,0,0,357,360,1,0,0,0,358,356,1,0,0,0,358,359,1,0,0,0,359,361,
        1,0,0,0,360,358,1,0,0,0,361,362,5,34,0,0,362,80,1,0,0,0,363,365,
        7,2,0,0,364,363,1,0,0,0,365,366,1,0,0,0,366,364,1,0,0,0,366,367,
        1,0,0,0,367,82,1,0,0,0,368,372,7,3,0,0,369,371,7,4,0,0,370,369,1,
        0,0,0,371,374,1,0,0,0,372,370,1,0,0,0,372,373,1,0,0,0,373,84,1,0,
        0,0,374,372,1,0,0,0,375,379,7,5,0,0,376,378,7,4,0,0,377,376,1,0,
        0,0,378,381,1,0,0,0,379,377,1,0,0,0,379,380,1,0,0,0,380,86,1,0,0,
        0,381,379,1,0,0,0,382,383,5,60,0,0,383,384,5,45,0,0,384,88,1,0,0,
        0,385,386,5,61,0,0,386,387,5,62,0,0,387,90,1,0,0,0,388,391,5,92,
        0,0,389,392,7,6,0,0,390,392,3,93,46,0,391,389,1,0,0,0,391,390,1,
        0,0,0,392,92,1,0,0,0,393,394,5,117,0,0,394,395,3,95,47,0,395,396,
        3,95,47,0,396,397,3,95,47,0,397,398,3,95,47,0,398,94,1,0,0,0,399,
        400,7,7,0,0,400,96,1,0,0,0,30,0,135,145,157,159,177,187,193,199,
        205,223,237,247,257,267,279,287,295,305,317,325,335,345,351,356,
        358,366,372,379,391,2,6,0,0,0,1,0
    ]

class YAPLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    WS = 18
    LINE_COMMENT = 19
    BLOCK_COMMENT = 20
    CLASS = 21
    ELSE = 22
    FI = 23
    IF = 24
    IN = 25
    INHERITS = 26
    ISVOID = 27
    LOOP = 28
    POOL = 29
    THEN = 30
    WHILE = 31
    NEW = 32
    NOT = 33
    TRUE = 34
    FALSE = 35
    LET = 36
    CASE = 37
    ESAC = 38
    OF = 39
    STRING = 40
    INT = 41
    TYPE = 42
    ID = 43
    ASSIGNMENT = 44
    IMPLY = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'{'", "'}'", "'('", "','", "')'", "':'", "'@'", "'.'", 
            "'~'", "'*'", "'/'", "'+'", "'-'", "'<='", "'<'", "'='", "'<-'", 
            "'=>'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "LINE_COMMENT", "BLOCK_COMMENT", "CLASS", "ELSE", "FI", 
            "IF", "IN", "INHERITS", "ISVOID", "LOOP", "POOL", "THEN", "WHILE", 
            "NEW", "NOT", "TRUE", "FALSE", "LET", "CASE", "ESAC", "OF", 
            "STRING", "INT", "TYPE", "ID", "ASSIGNMENT", "IMPLY" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "WS", "LINE_COMMENT", "BLOCK_COMMENT", 
                  "CLASS", "ELSE", "FI", "IF", "IN", "INHERITS", "ISVOID", 
                  "LOOP", "POOL", "THEN", "WHILE", "NEW", "NOT", "TRUE", 
                  "FALSE", "LET", "CASE", "ESAC", "OF", "STRING", "INT", 
                  "TYPE", "ID", "ASSIGNMENT", "IMPLY", "ESC", "UNICODE", 
                  "HEX" ]

    grammarFileName = "YAPL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


