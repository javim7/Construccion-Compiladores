// Parse Tree
digraph {
	node0 [label=program]
	node1 [label=classDefine]
	node0 -> node1
	node2 [label=class]
	node1 -> node2
	node3 [label=Main]
	node1 -> node3
	node4 [label=inherits]
	node1 -> node4
	node5 [label=IO]
	node1 -> node5
	node6 [label="{"]
	node1 -> node6
	node7 [label=feature_list]
	node1 -> node7
	node8 [label=property]
	node7 -> node8
	node9 [label=formal]
	node8 -> node9
	node10 [label=x]
	node9 -> node10
	node11 [label=":"]
	node9 -> node11
	node12 [label=Int]
	node9 -> node12
	node13 [label=";"]
	node1 -> node13
	node14 [label=feature_list]
	node1 -> node14
	node15 [label=method]
	node14 -> node15
	node16 [label=main]
	node15 -> node16
	node17 [label="("]
	node15 -> node17
	node18 [label=formal]
	node15 -> node18
	node19 [label=y]
	node18 -> node19
	node20 [label=":"]
	node18 -> node20
	node21 [label=Int]
	node18 -> node21
	node22 [label=")"]
	node15 -> node22
	node23 [label=":"]
	node15 -> node23
	node24 [label=Object]
	node15 -> node24
	node25 [label="{"]
	node15 -> node25
	node26 [label=expr]
	node15 -> node26
	node27 [label=x]
	node26 -> node27
	node28 [label="<-"]
	node26 -> node28
	node29 [label=expr]
	node26 -> node29
	node30 [label=1]
	node29 -> node30
	node31 [label="}"]
	node15 -> node31
	node32 [label=";"]
	node1 -> node32
	node33 [label="}"]
	node1 -> node33
	node34 [label=";"]
	node0 -> node34
	node35 [label=<EOF>]
	node0 -> node35
}
